# 玩家利用火焰来熔炼宝石，每次熔炼后，都有概率升级火焰，越高级的火焰熔炼出的宝石越好。
# 等级L，熔炼次数为N，保底槽位M， M=30时触发保底，L直接赋值5。
# 每次升级概率均为0.4，当L=5时，熔炼后会直接回到1级
# 当L=5,M=30时，优先触发保底直升5，而不是回到1级

import random
L = 1
M = 0
N = 0

#储存L的结果
list = []

# 获取所有元素的出现次数   代码来源 https://www.jb51.net/article/208696.htm
def all_list(arr):
  result = {}
  for i in set(arr):
    result[i] = arr.count(i)
  return result

# 熔炼开始

while N<10000:
    if M>= 30:   #M>=30  触发保底,直升5，同时清空保底槽。
        L = 5
        M = 0
    else:
        if L==5:   #L=5时，必然失败，保底槽积累5
            L = 1
            M = M+5
        else:
            p = random.random()
            # 强化成功，等级+1，保底槽也增加
            if p < 0.4:
                M = M + L
                L = L+1
            # 强化失败，直接回到1级，保底槽增加
            else:
                M = M+L
                L = 1
    N=N+1

    # 把L的等级情况生成一个序列储存起来。
    list.append(L)
    a = all_list(list)
print(a)
